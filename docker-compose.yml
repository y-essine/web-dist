version: '3.4'
services:
  nexus:
    image: sonatype/nexus3
    ports:
      - "8081:8081"
    container_name: nexus
    user: "200:200"  # Specify the user and group IDs for the Nexus process
    volumes:
      - ./nexus-data:/nexus-data
    command: ["sh", "-c", "chown -R 200:200 /nexus-data && exec /opt/sonatype/nexus/bin/nexus run"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://172.28.93.16:8081"]
      interval: 30s
      timeout: 10s
      retries: 5
  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "8080:8080"
    restart: on-failure
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:9091/eureka/
      - keycloak-client.server-url=http://172.28.93.16:18080/auth # use host name or ip of the host machine
    depends_on:
      - eureka-server
  eureka-server:
    build:
      context: ./eureka-server
    ports:
      - "9091:9091"
    restart: on-failure
  keycloak:
    image: jboss/keycloak:11.0.0
    volumes:
      - ./keycloak-server/realm-export.json:/tmp/keycloak/config/realm-export.json
    environment:
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: admin
        KEYCLOAK_IMPORT: /tmp/keycloak/config/realm-export.json
        DB_VENDOR: POSTGRES
        DB_ADDR: postgres
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_SCHEMA: public
        DB_PASSWORD: password
    ports:
      - "18080:18080"
    command:
      - "-b"
      - "0.0.0.0"
      - "-Djboss.socket.binding.port-offset=10000"
    restart: on-failure
    depends_on:
      - postgres
  postgres:
      image: postgres
      volumes:
        - postgres_data:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: password
      ports:
        - "5432:5432"
  microservice-consumer:
    build:
      context: ./microservice-consumer
    ports:
      - "9080:9080"
    restart: on-failure
    environment:
      #overriding spring application.properties
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:9091/eureka/
      - keycloak-client.server-url=http://172.28.93.16:18080/auth # use host name or ip of the host machine
    depends_on:
      - eureka-server
  microservice-producer:
    build:
      context: ./microservice-producer
    ports:
      - "9081:9081"
    restart: on-failure
    environment:
      #overriding spring application.properties
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:9091/eureka/
      - keycloak-client.server-url=http://172.28.93.16:18080/auth # use host name or ip of the host machine
    depends_on:
      - eureka-server
  microservice-candidat:
    build:
      context: ./microservice-candidat
    ports:
      - "9082:9082"
    restart: on-failure
    environment:
      #overriding spring application.properties
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:9091/eureka/
      - keycloak-client.server-url=http://172.28.93.16:18080/auth # use host name or ip of the host machine
    depends_on:
      - eureka-server
  microservice-reservation:
    build: ./microservice-reservation
    ports:
      - 9083:9083
    image: reservation-service
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:9091/eureka/
      - keycloak-client.server-url=http://172.28.93.16:18080/auth 
    depends_on:
      - eureka-server
  microservice-review:
    build: ./microservice-review
    ports:
      - 9084:9084
    image: review-service
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:9091/eureka/
      - keycloak-client.server-url=http://172.28.93.16:18080/auth
      - spring.datasource.url=jdbc:mysql://db-mysql:3306/carsharepro?serverTimezone=UTC
      - spring.datasource.username=spring
      - spring.datasource.password=spring
    depends_on:
      - db-mysql
      - eureka-server  
  microservice-vehicules:
    build: ./microservice-vehicules
    ports:
      - 9085:9085
    image: vehicules-service
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:9091/eureka/
      - keycloak-client.server-url=http://172.28.93.16:18080/auth 
    depends_on:
      - eureka-server  
  microservice-auth:
    build:
      context: ./microservice-auth
    ports:
      - 9086:9086
    image: node-app-image
    restart: on-failure
    environment:
      - MONGO_URI=mongodb+srv://inesmsallem:30101999@cluster0.friepyw.mongodb.net/
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:9091/eureka/
      - keycloak-client.server-url=http://172.28.93.16:18080/auth 
    depends_on:
      - mongodb
  db-mysql:
    image: mysql:latest
    environment:
      MYSQL_DATABASE: carsharepro         
      MYSQL_ROOT_PASSWORD: root
    ports:
     - "3306:3306"     
  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    restart: on-failure
  front:
    build:
      context: ./frontend
    image: my-front-app
    ports:
      - "3000:3000"
    restart: on-failure
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:9091/eureka/
      - keycloak-client.server-url=http://172.28.93.16:18080/auth 
    depends_on:
      - microservice-auth
  
volumes:
    postgres_data:
      name: keycloak_postgres_data
      driver: local